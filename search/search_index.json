{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to CheckID","text":"<p>CheckID is a secure and user-friendly onboarding solution that simplifies the first-time sign-in experience for new employees in your organization.</p> <p>Instead of relying on distributing temporary passwords, manual user setup, and IT bottlenecks, CheckID allows users to authenticate themselves using familiar and secure identity providers that they already use for online banking or similar.</p> <p>Once signed in, users are automatically provided with access to their Microsoft Entra ID account \u2014 fast, secure, and fully compliant.</p>"},{"location":"#key-benefits","title":"Key Benefits","text":"<ul> <li>Zero IT stress: No need to manually create and distribute temporary passwords.</li> <li>Frictionless for the user: Uses an authentication method they already know</li> <li>Secure by design: Integrates natively with  Microsoft Entra ID and follows all best practices for Zero Trust implementation.</li> </ul>"},{"location":"#how-it-works","title":"How It Works","text":"<ol> <li>The new employee goes to <code>yourorg.checkid.no</code> (Optional custom domain) on their phone or laptop.</li> <li>They choose their preferred authentication method.</li> <li>After secure authentication, CheckID:<ul> <li>Connects to your Microsoft Entra ID tenant</li> <li>Creates a Temporary Access Pass (TAP)</li> <li>Guides the user in adding the account to Microsoft Authenticator</li> </ul> </li> <li>The user can use Microsoft Authenticator to enroll additional devices, such as their PC</li> </ol> <p>Read more on checkid.no - CheckID is developed by fortytwo.io</p>"},{"location":"Getting-Started-Phishing-Resistant/","title":"Getting started - Phishing resistant","text":"<p>This configuration is the most secure way of configuring Entra ID, where your users are all required to authenticate using Phishing-Resistant authentication. This means that your users never use password, they never accept an Microsoft Authentication MFA notification, they never type an SMS based OTP or similar - they use passkeys or certificates.</p> <p>Switching to this type of authentication is not done in a day. Microsoft has provided a good documentation page for planning and deploying phishing resistant, and we can of course also help you with this. Essentially this involves things like device readiness and bootstraping phishing resistant methods. This is where CheckID can help you, by providing secure means of users to onboard into this type of organization.</p>"},{"location":"Getting-Started-Phishing-Resistant/#configure-the-recommended-conditional-access-policies","title":"Configure the recommended Conditional Access policies","text":"<p>We have several recommended configurations, depending on your situation. There are two \"issues\" we need to handle during onboarding for the phishing resistant configuration, which is app protection and authentication strength. To support the Microsoft recommended approaches, with temporarily exempting the user from certain conditional access policy requirements, CheckID has two features available:</p> <ul> <li>Automatic maintenance of an Entra ID security group for onboarding users</li> <li>Calling a webhook with information about the user doing the onboarding, where the target webhook can do the same thing as the previous feature (adding a person temporary to a group)</li> </ul>"},{"location":"Getting-Started-Phishing-Resistant/#configure-temporary-access-pass-and-passkeys","title":"Configure Temporary Access Pass and Passkeys","text":"<p>For onboarding users, we get users to register the Microsoft Authenticator app using a Temporary Access Pass, while getting a passkey enrolled at the same time. This means that the feature Temporary Access Pass and Passkey must be enabled in the tenant.</p> <p>In the Entra portal, open Protection and Authentication methods. </p> <p>Configure Passkey (FIDO2) to target all users with the below configuration:</p> <p></p> <p>Configure Temporary Access Pass to target all users with the below configuration:</p> <p></p>"},{"location":"Getting-Started/","title":"Configure Consent and Entra ID Settings","text":"<p>To allow CheckID to function correctly, you'll need to configure a few settings in Microsoft Entra ID.</p>"},{"location":"Getting-Started/#step-1-consent-to-the-checkid-application","title":"Step 1 \u2013 Consent to the CheckID Application","text":"<p>As a Global Administrator, you need to provide tenant-wide admin consent for the CheckID app.</p> <p>Visit the following URL to review and approve the necessary permissions:</p> <p>https://login.microsoftonline.com/common/adminConsent?client_id=b1c6646a-37c6-4a69-ae96-d6468e2c2a89</p> <p></p>"},{"location":"Getting-Started/#permissions-requested","title":"Permissions requested","text":"Permission Why it\u2019s needed User.Read.All Allows CheckID to locate and read user account details in your tenant UserAuthenticationMethod.ReadWrite.All Allows CheckID to create a Temporary Access Pass (TAP) for users CustomSecAttributeAssignment.Read.All Enables CheckID to read custom attribute assignments. This permission has no effect unless the CheckID service principal is explicitly assigned the Attribute assignment reader role in Microsoft Entra."},{"location":"Getting-Started/#step-2-configure-the-recommended-conditional-access-policies","title":"Step 2 - Configure the recommended Conditional Access policies","text":"<p>Note: This step is only relevant if you have conditional access policies that requires phishing resistant MFA or passwordless MFA as authentication strength, or requires app protection policies or approved apps only.</p> <p>We have several recommended configurations, depending on your situation. There are two \"issues\" we need to handle during onboarding, which is app protection and authentication strength. To support the Microsoft recommended approaches, with temporarily exempting the user from certain conditional access policy requirements, CheckID has two features available:</p> <ul> <li>Automatic maintenance of an Entra ID security group for onboarding users</li> <li>Calling a webhook with information about the user doing the onboarding, where the target webhook can do the same thing as the previous feature (adding a person temporary to a group)</li> </ul>"},{"location":"Getting-Started/#step-3-configure-temporary-access-pass-and-passkeys","title":"Step 3 - Configure Temporary Access Pass and Passkeys","text":"<p>For onboarding users, we get users to register the Microsoft Authenticator app using a Temporary Access Pass, while getting a passkey enrolled at the same time. This means that the feature Temporary Access Pass and Passkey must be enabled in the tenant.</p> <p>In the Entra portal, open Protection and Authentication methods.</p> <p>Configure Passkey (FIDO2) to target all users with the below configuration:</p> <p></p> <p>Configure Temporary Access Pass to target all users with the below configuration:</p> <p></p>"},{"location":"Getting-Started/#step-4-we-also-need-users-to-have-a-password","title":"Step 4 - \"We also need users to have a password\"","text":"<p>CheckID prepares you for being passwordless, but we also understand that many of our customers still need their users to have a password. This can because computers are still hybrid joined, or because they need to sign into Active Directory integrated services that do not do single sign-on.</p> <p>To provide users with the ability to set a password, CheckID provides a feature that checks the password before the user submits, combined with  an agent based approach, where an agent running locally in Active Directory is used to set the password on the AD user account. The password is then synchronized from AD to Entra ID using Password Hash Sync.</p> <p>Example on what this looks like for users (Norwegian screenshot as example):</p> <p></p> <p>To configure the on-prem agent, see Password Agent Installation Guide.</p>"},{"location":"Conditional-Access/Authentication-Strength/","title":"Authentication Strengths","text":"<p>This is only necessary if you have policies requiring either Passwordless MFA or Phising-resistant MFA</p> <p>For any organization that has policies that requires users to satisfy the built-in authentication strength Passwordless MFA or Phising-resistant MFA, you'll notice that neither of these includes Temporary Access Pass:</p> <p></p> <p></p> <p>This means that a Temporary Access Pass will not be able to satisfy the policies and the onboarding will fail. To fix this, you have some options, as documented by Microsoft.</p> <p>In summary, you have these options:</p> <ul> <li>For mobile devices, create a separate conditional access policy that requires a custom authentication strength that allows Temporary Access Pass</li> <li>Use the Onboarding Group feature to temporary add users to an Entra ID group during onboarding, and use this group to exclude the user from the passwordless or phishing resistant MFA requirement.</li> </ul>"},{"location":"Conditional-Access/Onboarding-Group/","title":"Onboarding Group","text":"<p>CheckID supports temporarily adding the user that is onboarding to an Entra ID security group that can be used for the purpose of excluding the onboarding user from a conditional access policy.</p> <p>To configure such as group, go to the Entra portal, Groups and Overview.</p> <p>Click New group, give it a name and make sure the CheckID Enterprise App is added as the owner of the group:</p> <p></p> <p>It should now look like this:</p> <p></p> <p>After you have created your group, please notify your CheckID contact person with the object id of the group, and we will enable the feature for you.</p> <p>After this, you will see that users that completes the onboarding are added to the group for one hour during the onboarding, before the user is removed again.</p>"},{"location":"Conditional-Access/Require-Approved-Or-Protected-App-Policy/","title":"Require Approved or Protected App Policy","text":"<p>If you have a conditional access policy that always require compliant device, you will run into issues where the user cannot register a passkey during onboarding. To work around this issue, Microsoft has documented some methods. CheckID supports the Allow the exemption for only a limited period of time workaround through the Onboarding Group feature.</p>"},{"location":"Guides/Configuring-Password-Agent/","title":"Password Agent Installation Guide","text":"<p>The Check ID password agent module is a simple module made for listening to change password requests from CheckID, executing the password change in the local Active Directory (AD) and reporting back the status of the password change. There are a few steps required to install the module and run it:</p>"},{"location":"Guides/Configuring-Password-Agent/#requirements","title":"Requirements","text":"<ul> <li>The agent must be running on a domain joined windows server</li> <li>PowerShell 7.5 or newer installed</li> <li>AD PowerShell installed, with all features: <code>Install-WindowsFeature -Name RSAT-AD-Tools -IncludeAllSubFeature</code></li> </ul>"},{"location":"Guides/Configuring-Password-Agent/#step-1-install-required-powershell-modules","title":"Step 1: Install required PowerShell modules","text":"<p>Open a PowerShell 7 window (pwsh.exe) as administrator and install the required modules from PowerShell Gallery:</p> <pre><code>Install-Module EntraIDAccessToken -Scope AllUsers\nInstall-Module Fortytwo.CheckID.PasswordAgent -Scope AllUsers\n</code></pre> <p>Note!</p> <p>You may be prompted to confirm the installation from 'PSGallery'.</p> <p>Enter 'A' to allow current, and all future, modules from PSGallery to be installed, without prompting  </p> <p>Enter 'Y' to allow installation of only current module</p> <p>Untrusted repository You are installing the modules from an untrusted repository. If you trust this repository, change its InstallationPolicy value by running the Set-PSRepository cmdlet.. Are you sure you want to install the modules from 'PSGallery'? [Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is \"N\"):</p> <p>Note!</p> <p>If modules cannot be installed from PowerShell Gallery they must be downloaded manually into the checkid folder (created in Step 2).</p> <p>Files downloaded from the internet can be tagged with script execution block, for security reasons. To remove this protection, and make sure all files in the checkid folder can be processed, run the following:  </p> <p><code>Get-ChildItem -Recurse c:\\checkid | Unblock-File -WhatIf</code></p> <p>If it looks OK, run again without -WhatIf:  </p> <p><code>Get-ChildItem -Recurse c:\\checkid | Unblock-File -Verbose</code></p>"},{"location":"Guides/Configuring-Password-Agent/#step-2-configure-checkidpasswordagent-requirements","title":"Step 2: Configure CheckIDPasswordAgent requirements","text":"<ol> <li>Run the following (also as administrator):</li> </ol> <pre><code># Create checkid directory and go into the new folder\nmkdir c:\\checkid ; cd c:\\checkid\n\n# Create new Windows event log source \"CheckIDPasswordAgent\" visible in Application event log\nNew-EventLog -LogName \"Application\" -Source \"CheckIDPasswordAgent\"\n\n# Creates and saves a self-signed certificate named \"CheckIDAgent\" used for authenticating with password reset API\n$Certificate = New-SelfSignedCertificate -Subject \"CheckIDAgent\" -NotAfter (Get-Date).AddYears(100)\n[System.Convert]::ToBase64String($Certificate.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Cert), \"InsertLineBreaks\") | Set-Content -Path \"CheckIDAgent-$($env:COMPUTERNAME).cer\"\n\n# Output thumbprint, certificate file name and agent id, required to configure the CheckID password agent run script\n\"\",\"Thumbprint:       $($Certificate.ThumbPrint)\", \"Certificate file: CheckIDAgent-$($env:COMPUTERNAME).cer\",\"Agent id:         $(New-Guid)\",\"\" | Write-Host\n</code></pre> <p>PowerShell will generate output (example below). Copy it and save it as you'll be needing this later on to configure and run the CheckID Agent.</p> <pre><code>Thumbprint:       905A03B4EBF6B25E7986B6E0C20172F74988C373\nCertificate file: CheckIDAgent-&lt;SERVERNAME&gt;.cer\nAgent id:         a628f707-6c25-596e-8424-4249fa0e14b9\n</code></pre>"},{"location":"Guides/Configuring-Password-Agent/#step-3-consent-to-fortytwo-universe-our-api-and-create-an-entra-app-registration-for-the-password-reset-agent","title":"Step 3: Consent to Fortytwo Universe (our API) and create an Entra app registration for the password reset agent","text":"<ol> <li> <p>As a global administrator, admin consent the Fortytwo Universe API: https://login.microsoftonline.com/common/adminconsent?client_id=2808f963-7bba-4e66-9eee-82d0b178f408 </p> <p>Note!</p> <p>After successfully granting admin consent you may get an error page. This simply means that there is no redirect URI configured on the app registration. The admin consent process is complete.</p> <p>To verify that the admin consent was successful, look in Enterprise applications: </p> </li> <li> <p>As a Cloud Application Administrator (or more privileged admin), in Entra ID, go to App registrations and select New registration</p> </li> <li> <p>Give it a name (e.g. CheckIDAgent) and select Register</p> </li> <li> <p>Copy and save the Client ID and Tenant ID </p> </li> <li> <p>Under Certificates &amp; secrets, upload the certificate file created in Step 2 </p> </li> <li> <p>Under API permissions, click Add a permission, select APIs my organization uses and locate Fortytwo Universe </p> </li> <li> <p>Under Application permissions, check checkid_agent.all and click Add permissions </p> </li> <li> <p>Select Grant admin consent </p> </li> </ol>"},{"location":"Guides/Configuring-Password-Agent/#step-4-create-a-run-file-to-test-the-checkid-agent-configuration","title":"Step 4: Create a run file to test the CheckID Agent configuration","text":"<p>Create a new PowerShell file <code>C:\\checkid\\run.ps1</code>. Replace placeholder values (for thumbprint, clientid, tenantid) with output from Step 2 - Configure CheckIDPasswordAgent requirements:</p> <pre><code># Install and auto update the PasswordAgent module\nInstall-Module Fortytwo.CheckID.PasswordAgent -Confirm:$false -Force -Verbose -Scope CurrentUser\nImport-Module Fortytwo.CheckID.PasswordAgent -Force\n\nAdd-EntraIDClientCertificateAccessTokenProfile `\n    -Resource \"2808f963-7bba-4e66-9eee-82d0b178f408\" `\n    -Thumbprint \"THUMBPRINT_FROM_STEP2\" `\n    -ClientId \"CLIENT_ID_FROM_STEP3\" `\n    -TenantId \"TENANT_ID_FROM_STEP3\"\n\nConnect-CheckIDPasswordAgent `\n    -AgentID \"AGENTID_FROM_STEP2\" `\n    -Verbose\n\nStart-CheckIDPasswordAgentListener -Sleep 2 -Verbose -Debug\n</code></pre>"},{"location":"Guides/Configuring-Password-Agent/#step-5-test-the-checkid-agent-manually","title":"Step 5: Test the CheckID Agent manually","text":"<ol> <li> <p>Open a PowerShell 7 window (pwsh.exe) as administrator</p> </li> <li> <p>Run: <code>cd c:\\checkid ; . c:\\checkid\\run.ps1</code></p> <p>At this point, you can test out CheckID and see that a password change is received by the agent.</p> <p>Note!</p> <p>The reset password operation will only be successful if your user holds sufficient Active Directory privileges</p> <p>If you get stopped by strict execution policy see PowerShell execution policy.</p> <p>If the agent starts successfully it will create output similar like this:</p> <pre><code>VERBOSE: Generating RSA key pair for encryption\nVERBOSE: Registering CheckIDPasswordAgent with AgentID a628f707-6c25-596e-8424-4249fa0e14b9 and TenantID b1fa17-9118-43ed-107e-1be368b7d2b0 to api.fortytwo.io\nVERBOSE: Requested HTTP/1.1 POST with 603-byte payload\nVERBOSE: Received HTTP/1.1 response of content type application/json of unknown size\nVERBOSE: CheckIDPasswordAgent registered successfully: {\"agentId\":\"a628f707-6c25-596e-8424-4249fa0e14b9\"}\nVERBOSE: Starting CheckIDPasswordAgent listener with a sleep interval of 2 seconds\nVERBOSE: Requested HTTP/1.1 GET with 0-byte payload\nVERBOSE: Received HTTP/1.1 response of content type application/json of unknown size\nVERBOSE: Content encoding: utf-8\nVERBOSE: No requests found for agent a628f707-6c25-596e-8424-4249fa0e14b9\nVERBOSE: No requests found, sleeping for 2 seconds\nVERBOSE: Requested HTTP/1.1 GET with 0-byte payload\nVERBOSE: Received HTTP/1.1 response of content type application/json of unknown size\nVERBOSE: Content encoding: utf-8\nVERBOSE: No requests found for agent a628f707-6c25-596e-8424-4249fa0e14b9\nVERBOSE: No requests found, sleeping for 2 seconds\n</code></pre> </li> <li> <p>Open Event Viewer, expand Windows Logs and look into Application event log.    There should now be logs with source CheckIDPasswordAgent.    </p> </li> </ol>"},{"location":"Guides/Configuring-Password-Agent/#powershell-execution-policy","title":"PowerShell Execution Policy","text":"<p>If script execution is stopped you can temporarily (or permanently) modify the current execution policy:</p> <pre><code>Get-ExecutionPolicy -List\n$originalExecutionPolicy = Get-ExecutionPolicy -Scope CurrentUser\nSet-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser -Force\n</code></pre> <p>When you have verified that the CheckID Agent can run successfully, set execution policy back to it's original setting:</p> <pre><code>Set-ExecutionPolicy -ExecutionPolicy $originalExecutionPolicy -Scope CurrentUser -Force\n</code></pre>"},{"location":"Guides/Configuring-Password-Agent/#step-6-create-and-run-the-checkid-agent-as-a-scheduled-task","title":"Step 6: Create and run the CheckID Agent as a scheduled task","text":"<ol> <li> <p>As a user with domain admin privileges, create a gMSA (group managed service account) for the scheduled task to run as:</p> <pre><code># Remember to include a trailing '$', after computername, if configuring a different (or additional) server principal(s) to retrieve the gMSA password\nNew-ADServiceAccount -Name \"checkidagent\" -PrincipalsAllowedToRetrieveManagedPassword \"$($env:COMPUTERNAME)$\" -DNSHostname \"checkid.no\"\n\n# Verify that the computer can use the group managed service account\nTest-ADServiceAccount -Identity checkidagent -Verbose\n</code></pre> <p>Note!</p> <p>If the Test-ADServiceAccount is successful it will return True</p> <p><code>Test-ADServiceAccount -Identity checkidagent -Verbose</code> VERBOSE: Performing the operation \"Test\" on target \"CN=checkidagent,CN=Managed Service Accounts,DC=fabrikam,DC=com\". True</p> <p>If the test fails, download script Test-gMSAencryptionSettings.ps1, from Fortytwo public GitHub repository, for help with troubleshooting.</p> </li> <li> <p>Assign the gMSA the reset password permission on an organizational unit (OUs) in Active Directory  </p> <p>The PowerShell way</p> <ol> <li>Download Delegate-PasswordReset.ps1, from Fortytwo public GitHub repository.</li> <li>Run script as a user with domain admin privileges. Provide group managed service account name and distinguished name of where to apply the reset password privilege: <code>Delegate-PasswordReset.ps1 -AccountSam \"checkidagent$\" -DistinguishedName \"OU=users,OU=organization,DC=fabrikam,DC=com\"</code></li> </ol> <p>Removing the delegated permission can easily be performed in Active Directory Users and Computers:</p> <p></p> <p>Using AD tool dsacls (see requirements - AD PowerShell RSAT tools)</p> <ol> <li> <p>Run as a user with domain admin privileges (adjust the OU path and domain name):</p> <p>Note!</p> <p>If running dsacls in a PowerShell 7 shell make sure there are single apostrophes enclosing the final argument.</p> <pre><code># Add Reset Password permission\ndsacls \"OU=Users,OU=Organization,DC=FABRIKAM,DC=COM\" /I:S /G 'fabrikam.com\\checkidagent$:CA;Reset Password;user'\ndsacls \"OU=Users,OU=Organization,DC=FABRIKAM,DC=COM\" /I:S /G 'fabrikam.com\\checkidagent$:rpwp;PwdlastSet;user'\ndsacls \"OU=Users,OU=Organization,DC=FABRIKAM,DC=COM\" /I:S /G 'fabrikam.com\\checkidagent$:rpwp;lockoutTime;user'\n\n# Verify Reset Password permission\n# Because the gMSA is special account (classified as a machine account) it's sAMAccountName will have a trailing '$', visible from the output\ndsacls \"OU=Users,OU=Organization,DC=FABRIKAM,DC=COM\" | Select-String -SimpleMatch \"checkid\"\n\nAllow FABRIKAM\\checkidagent$  Reset Password\nAllow FABRIKAM\\checkidagent$  SPECIAL ACCESS for pwdLastSet\nAllow FABRIKAM\\checkidagent$  SPECIAL ACCESS for lockoutTime\n</code></pre> <pre><code># Remove permissions assigned to (group managed service) account\ndsacls \"OU=Users,OU=Organization,DC=FABRIKAM,DC=COM\" /R 'FABRIKAM\\checkidagent$'\n\n# Verify that Reset Password permissions have been removed\ndsacls \"OU=Users,OU=Organization,DC=FABRIKAM,DC=COM\" | Select-String -SimpleMatch \"checkid\"\n</code></pre> <p>Note!</p> <p>ONLY when run in with PowerShell 7 the output of Select-String will look like this:</p> <p>Allow FABRIKAM\\\u2190[7mcheckid\u2190[0magent$</p> <p>Add -NoEmphasis and it will look as expected, as when run with PowerShell 5:</p> <p>Allow FABRIKAM\\checkidagent$    Reset Password</p> <p>\"By default, PowerShell 7 highlights the matched string. To turn this off, the -NoEmphasis parameter must be specified. Prior versions don't have the built-in capabilities to highlight matched strings.\"</p> </li> </ol> </li> <li> <p>Assign permissions to access the CheckIDAgent certificate private key</p> <ol> <li> <p>As administrator, open <code>certlm.msc</code> (shortcut for \"Manage computer certificates\" in Control panel)</p> </li> <li> <p>Right-click certificate CheckIDAgent</p> </li> <li> <p>Select Manage Private Keys </p> </li> <li> <p>When adding a group managed service account make sure to select \"Service accounts\" </p> </li> <li> <p>Allow any account that will be running the CheckID Agent Read permission to the certificate's private key </p> </li> </ol> </li> <li> <p>For gMSA to run a scheduled task, add the \"User Rights Assignment\" Log on as a batch job</p> <p>Using Local Security Policy in Administrative Tools</p> <ol> <li> <p>As administrator, open <code>secpol.msc</code> (shortcut for \"Local Security Policy\") </p> <p>Tip!</p> <p>Use gpupdate if change isn't effective immediately (if scheduled task won't start):</p> <p><code>gpupdate /target:computer /force</code></p> </li> </ol> <p>The PowerShell way</p> </li> <li> <p>Download Add-LogonAsABatchJobRight.ps1 from Fortytwo public GitHub repository and save it in c:\\checkid</p> </li> <li> <p>Run <code>Add-LogonAsABatchJobRight -AccountSam checkidgMSA$</code></p> </li> <li> <p>To remove the permission, run <code>Add-LogonAsABatchJobRight -AccountSam checkidgMSA$ -Remove</code></p> </li> <li> <p>RECOMMENDED    To run a scheduled task using a gMSA the scheduled task must be created programmatically</p> </li> <li> <p>Download Register-ScheduledTasks.ps1 from Fortytwo public GitHub repository and save it in c:\\checkid</p> </li> <li> <p>Download StartStop-CheckIDAgentListener.ps1 from Fortytwo public GitHub repository and save it in c:\\checkid</p> </li> <li> <p>Configure StartStop-CheckIDAgentListener.ps1 with configuration from run.ps1, which was verified in Step 5 - Test the Checkid Agent manually     Use a text editor, open c:\\checkid\\run.ps1, copy and replace the Add-EntraClientCertificateAccessTokenprofile and Connect-CheckIDPasswordAgent settings placeholder settings in StartStop-CheckIDAgentListener.ps1 (shown below):</p> <pre><code>Add-EntraIDClientCertificateAccessTokenProfile `\n    -Resource \"2808f963-7bba-4e66-9eee-82d0b178f408\" `\n    -Thumbprint \"&lt;actual thumbprint&gt;\" `\n    -ClientId \"&lt;app registration app id&gt;\" `\n    -TenantId \"&lt;Entra tenant id&gt;\"\n\nConnect-CheckIDPasswordAgent `\n    -AgentID \"&lt;actual agent id&gt;\" `\n    -Verbose\n</code></pre> <ol> <li>Create CheckID Password Agent scheduled task (default gMSA name: checkidadgent$, default script path c:\\checkid\\StartStop-CheckIDAgentListener.ps1)</li> </ol> <p>As administrator, open a PowerShell 7 window and run: <code>c:\\checkid\\Register-ScheduledTasks.ps1</code> To address a different gMSA and run script name / path use: <code>c:\\checkid\\Register-ScheduledTasks.ps1 -script c:\\checkid\\run.ps1 -gMSA checkidgMSA$</code> (remember a trailing $ when using a gMSA)</p> <p>Tip!</p> <p>The scheduled task runs the script with parameter -ExecutionPolicy Bypass to avoid PowerShell execution policy settings. For interactive script execution, you may need to see PowerShell execution policy to alter effective policy.</p> </li> <li> <p>OPTIONAL    Create a scheduled task and run it using a (non-managed group) service account</p> </li> <li> <p>Runs every 2 minutes (so it will restart the task if it fails)    </p> </li> <li> <p>Runs the action <code>pwsh -executionPolicy bypass -file c:\\checkid\\run.ps1</code> </p> </li> <li> <p>Do not run multiple instances </p> </li> <li> <p>Configure scheduled task to \"Run whether user is logged on or not\"    </p> </li> </ol>"},{"location":"Guides/Configuring-minimum-permissions/","title":"Configuring minimum permissions","text":"<p>To simplify onboarding of CheckID as much as possible, we request the permission UserAuthenticationMethod.ReadWrite.All, which grant access to create a Temporary Access Pass for each user (And also reset other authentication methods).</p> <p>It is supported to limit the CheckID permissions to the following:</p> Permission Why it\u2019s needed User.Read.All Allows CheckID to locate and read user account details in your tenant CustomSecAttributeAssignment.Read.All Enables CheckID to read custom attribute assignments. This permission has no effect unless the CheckID service principal is explicitly assigned the Attribute assignment reader role in Microsoft Entra. Authentication Administrator role on an Administrative Unit Grants CheckID access to manage authentication methods for users, but only the members of an administrative unit, instead of all users in your tenant."},{"location":"Guides/Configuring-minimum-permissions/#step-1-add-checkid-app-and-consent","title":"Step 1 - Add CheckID app and consent","text":"<p>In this situation, you cannot use the default user interface for admin consent. Instead, you need to add the CheckID app using the below PowerShell:</p> <pre><code># Connect your PowerShell session\nConnect-MgGraph -Scope Application.ReadWrite.All, AppRoleAssignment.ReadWrite.All\n\n$CheckID = Get-MgServicePrincipal -Filter \"AppId eq 'b1c6646a-37c6-4a69-ae96-d6468e2c2a89'\"\n\nif(!$CheckID) {\n    $CheckID = New-MgServicePrincipal -AppId \"b1c6646a-37c6-4a69-ae96-d6468e2c2a89\"\n    Write-Host \"Sleeping 20 seconds for Entra ID to replicate\"\n    Start-Sleep -Seconds 20\n}\n$MicrosoftGraph = Get-MgServicePrincipal -Filter \"AppId eq '00000003-0000-0000-c000-000000000000'\"\n\n# Add permission user.read.all\nInvoke-MgGraphRequest -Uri \"https://graph.microsoft.com/v1.0/servicePrincipals/$($MicrosoftGraph.id)/appRoleAssignments\" -Method POST -Body @{\n    principalId = $CheckID.Id\n    resourceId = $MicrosoftGraph.id\n    appRoleId = \"df021288-bdef-4463-88db-98f22de89214\"\n} | out-null\n\n# Add permission CustomSecAttributeAssignment.Read.All\nInvoke-MgGraphRequest -Uri \"https://graph.microsoft.com/v1.0/servicePrincipals/$($MicrosoftGraph.id)/appRoleAssignments\" -Method POST -Body @{\n    principalId = $CheckID.Id\n    resourceId = $MicrosoftGraph.id\n    appRoleId = \"3b37c5a4-1226-493d-bec3-5d6c6b866f3f\"\n} | out-null\n</code></pre> <p>At this point, you'll see that CheckID has only two permissions and not currently access to create TAPs:</p> <p></p>"},{"location":"Guides/Configuring-minimum-permissions/#step-2-create-au-and-grant-checkid-access","title":"Step 2 - Create AU and grant CheckID access","text":"<p>In Entra ID, find Administrative units and click + New administrative unit.</p> <p>Name the AU something that makes sense for your environment. Do not configure it as a Restricted management administrative unit.</p> <p></p> <p>Click Review + create (It is not currently possible to grant Service principals access during creation)</p> <p></p> <p>Open your administrative unit, go to Roles and administrators and click on Authentication Administrator:</p> <p></p> <p>Locate CheckID as the member:</p> <p></p> <p>Input a justificaiton and click Assign:</p> <p></p> <p>Your environment should now look something like this:</p> <p></p>"},{"location":"Guides/Configuring-minimum-permissions/#step-3-custom-security-attribute-access","title":"Step 3 - Custom security attribute access","text":"<p>Following the Custom Security Attributes part of the guide</p>"},{"location":"Guides/Configuring-old-ID-porten/","title":"ID-porten konfigurasjon","text":"<p>For \u00e5 bruke Digitaliseringsdirektoratet ID-porten l\u00f8sning kreves det tilgang til Samarbeidsportalen.</p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p> <p></p>"},{"location":"Guides/Custom-Branding/","title":"Custom Branding","text":"<p>CheckID is a customizable experience, where you can add your logo and fav-icon and make slight changes to the colors to make it match your corporate branding guidelines.</p> <p>In the future we plan to add more customization options, so stay tuned for any announcements!</p>"},{"location":"Guides/Custom-Domain-Setup/","title":"Custom Domain Setup","text":"<p>If you'd like to use your own domain with CheckID (e.g. <code>onboarding.yourcompany.com</code>), you can do so by setting up a simple DNS record.</p>"},{"location":"Guides/Custom-Domain-Setup/#steps","title":"Steps","text":"<ol> <li>Go to your DNS provider\u2019s control panel.</li> <li>Create a CNAME record for the subdomain you want to use (e.g. <code>onboarding.yourcompany.com</code>)</li> <li>Point the CNAME to your CheckID domain: <code>companyname.checkid.no</code></li> </ol>"},{"location":"Guides/Custom-Domain-Setup/#example","title":"Example","text":"Type Host / Name Points to CNAME <code>onboarding</code> <code>companyname.checkid.no</code> <p>This will make <code>onboarding.yourcompany.com</code> serve your CheckID instance.</p>"},{"location":"Guides/Custom-Domain-Setup/#notes","title":"Notes","text":"<ul> <li>SSL is automatically provisioned and managed by CheckID. No additional setup is needed on your end.</li> <li>Not all CheckID licenses include support for custom domains.   Please refer to our website to see which features are included in your plan.</li> </ul>"},{"location":"Guides/Custom-Security-Attributes/","title":"Custom Security Attributes","text":"<p>CheckID uses identity providers such as BankID, ID-porten and similar, which mostly provide national identity numbers (NINs) as the only available information about the signed in user. The sensitivity of these numbers vary between countries, but we always recommend storing these values in Entra ID in Custom Security Attributes (CSA).</p> <p>Unlike other Entra ID user attributes, CSAs are only readable by users and service principals that have been explicitly granted access.</p>"},{"location":"Guides/Custom-Security-Attributes/#creating-the-recommended-custom-security-attribute-configuration","title":"Creating the recommended Custom Security Attribute configuration","text":"<p>CheckID can query CSA. This means that if you already have a CSA with the NIN of your users, you can continue using that. However, if you are not currently using CSAs, we recommend you do the following.</p> <ol> <li>Grant yourself the Attribute Definition Administrator role in Entra ID</li> <li>In the Entra portal, find Protection and Custom security attributes in the left menu</li> <li> <p>Click + Add attribute set</p> <p></p> </li> <li> <p>Name the attribute set CheckID and click Add</p> <p></p> </li> <li> <p>Click on the CheckID attribute set and + Add attribute</p> <p></p> </li> <li> <p>Name the attribute NIN and click Save</p> <p></p> </li> <li> <p>Under Roles and administrators, click the Attribute Assignment Reader role</p> <p></p> </li> <li> <p>Click + Add assignments</p> <p></p> </li> <li> <p>Find the CheckID Enterprise Application and click Add</p> <p></p> </li> </ol>"},{"location":"Guides/Custom-Security-Attributes/#populating-the-csas","title":"Populating the CSAs","text":"<p>Custom security attributes cannot be synchronized from Active Directory, through Entra ID Connect, like other attributes. Instead, you have some other options that allows you to populate the CSAs with values:</p> <ul> <li>Manually set through the Entra portal</li> <li>Using the Update-MgUser PowerShell cmdlet</li> <li>Using the Microsoft Graph</li> <li>Using API-Driven Provisioning</li> <li>Using Marius Solbakken's CustomSecurityAttribute sync module in PowerShell</li> </ul> <p>CheckID is built by Fortytwo, which have several experts that can help you with populating the CSAs by synchronizing from HR.</p>"},{"location":"Guides/Password-Reset-Configuration/","title":"Password Reset Configuration","text":"<p>As described on the Getting Started pages, CheckID uses the Microsoft self service password reset functionality together with password write-back for allowing users to set a password. The user authenticates with the Microsoft Authenticator app that was onboarded with CheckID:</p> <p></p> <p>To allow this configuration, there are some configurations needed in Entra ID, detailed below. This will configure your Entra ID in a very secure fashion, where self service password reset is configured only to be allowed by authenticating using the Microsoft Authenticator app.</p>"},{"location":"Guides/Password-Reset-Configuration/#disable-sms-based-password-reset","title":"Disable SMS based password reset","text":"<p>Note: If you are using SMS based sign-in for users, do not follow this step</p> <p>We recommend disabling SMS based password reset, as it is considered unsecure and will eventually be deprecated by Microsoft.</p> <p>In the Entra portal, open Protection and Authentication methods.</p> <p>Disable the SMS method:</p> <p></p>"},{"location":"Guides/Password-Reset-Configuration/#disable-phone-based-password-reset","title":"Disable Phone based password reset","text":"<p>We recommend disabling phone based password reset, as it is considered unsecure and will eventually be deprecated by Microsoft.</p> <p>In the Entra portal, open Protection and Authentication methods.</p> <p>Disable the Voice call method:</p> <p></p>"},{"location":"Guides/Password-Reset-Configuration/#disable-email-otp-based-password-reset","title":"Disable Email OTP based password reset","text":"<p>We recommend disabling the Email OTP based password reset method, as in general we never see this used at our customers, and we are replacing it with the Microsoft Authenticator app.</p> <p>Disable the Email OTP method:</p> <p></p>"},{"location":"Guides/Password-Reset-Configuration/#switch-authentication-methods-migration-status","title":"Switch authentication methods migration status","text":"<p>Microsoft is moving away from the separate configuration of self service password reset found under Users in Entra ID, to the Authentication methods. This change will happen in September 2025 (at least as of April 2025). Let's simply switch you over to the new method of configuration.</p> <p>Make sure you have your methods correctly configured according to the below recommendation:</p> <p></p> <p>Switch the Migration status to Complete.</p> <p></p>"},{"location":"Guides/User-Journey-Detailed/","title":"User Journey with technical details","text":""},{"location":"Guides/User-Journey-Detailed/#step-1-user-chooses-method-of-authentication","title":"Step 1 - User chooses method of authentication","text":""},{"location":"Guides/User-Journey-Detailed/#step-2-choose-between-returning-or-new-hire","title":"Step 2 - Choose between returning or new hire","text":"<p>Depending on whether the user is a returning employee or a new hire, they choose the appropriate selection.</p> <p></p>"},{"location":"Guides/User-Journey-Detailed/#step-3-select-account-to-onboard","title":"Step 3 - Select account to onboard","text":"<p>A value from the authentication session is used to determine which user accounts the person has. These are shown as a list and the user can choose which account to onboard.</p> <p></p>"},{"location":"Guides/User-Journey-Detailed/#step-4-install-microsoft-authenticator","title":"Step 4 - Install Microsoft Authenticator","text":"<p>The first step that the user needs to do is to install the Microsoft Authenticator app. Here, the option to the Google Play Store or Apple App store is shown. If the user signs in from another device than their phone, the user can show the QR code in order to navigate with those.</p> <p>At the same time this step is shown, a Temporary Access Pass (TAP) is created for the user account. This allows some time for the TAP to be replicated in Entra ID.</p> <p></p>"},{"location":"Guides/User-Journey-Detailed/#step-5-sign-into-microsoft-authenticator","title":"Step 5 - Sign into Microsoft Authenticator","text":"<p>The user is told to sign into the Microsoft Authenticator app with the userPrincipalName and the generated TAP.</p> <p></p> <p>During this step, when following our Getting Started guide, the user will end up with an Authenticator app that both support notification based MFA and passkey based MFA. They will also be told to register their device, if you have configured this policy.</p>"},{"location":"Guides/User-Journey-Detailed/#step-5-optional-set-a-password","title":"Step 5 (OPTIONAL) - Set a password","text":"<p>NOTE: It is possible to choose whether this step is shown or not. If you do not need passwords, this can be hidden.</p> <p>The user will be told to click the set password button, and clicking it will open a dialogue where the user sets a password.</p> <p></p> <p>In the dialogue the user will be prompted to set a password. Note that the user will be able to see whether they meet all the password requirements.</p> <p></p>"},{"location":"Guides/User-Journey-Detailed/#step-6-the-process-is-complete","title":"Step 6 - The process is complete","text":"<p>Once the above steps have been completed, the user is shown a screen that confirms that the account is now set up and optionally a set of useful links and FAQ.</p> <p></p>"},{"location":"Guides/User-Journey-Detailed/#so-what-about-the-computer","title":"So what about the computer?","text":"<p>Signing into the computer is the next step, and the phone is now used for this operation - at least when the computer is Entra Joined. For Entra Joined devices, the Web sign-in for Windows is recommended. Here, the user can use the passkey they got in Step 4 for signing passwordlessly into their computer. The computer will then enroll with Windows Hello for Business, which will take over as the users normal method of authentication on that device.</p>"},{"location":"Guides/User-Journey-Detailed/#but-we-have-macs","title":"But we have Macs?","text":"<p>Note: Documentation not complete yet. We are working on it. In the mean time, have a look at these:</p> <p>https://learn.microsoft.com/entra/identity/devices/device-join-microsoft-entra-company-portal?tabs=secure-enclave</p> <p>https://learn.microsoft.com/entra/identity/devices/device-join-macos-platform-single-sign-on?tabs=secure-enclave</p>"},{"location":"Guides/User-Journey-Example/","title":"Example of a user journey when onboarding","text":"<p>Styling, fonts, logo, text etc. are all customizable.</p> <p>\u25b6 Watch a demo video</p> Step 1 Step 2 Step 3 Step 4 Step 5 Step 6"},{"location":"Identity-Providers/Configure-ID-porten/","title":"Configure-ID-porten","text":"<p>Written in Norwegian, as this is only relevant for Norwegians.</p> <p>For \u00e5 sette opp kobling mot ID-porten trenger CheckID en applikasjon registrert i Digitaliseringsdirektoratet sin Samarbeidsportalen.</p>"},{"location":"Identity-Providers/Configure-ID-porten/#kortvarianten","title":"Kortvarianten","text":"<p>F\u00f8lgende m\u00e5 fylles ut og/eller endres fra standardverdier:</p> Innstilling Verdi Applikasjonstype web Autentiseringsmetode client_secret_post Redirect uri-er https://kundeinstans.checkid.no/signin-oidc,https://onboarding.ditt-selskap.no/signin-oidc Post logout redirect uri-er https://kundeinstans.checkid.no/completed,https://kundeinstans.checkid.no/,https://kundeinstans.checkid.no/v2/completed,https://onboarding.ditt-selskap.no/completed,https://onboarding.ditt-selskap.no/,https://onboarding.ditt-selskap.no/v2/completed <p>Det vi trenger tilbake:</p> <ul> <li>Client id</li> <li>Client secret</li> </ul>"},{"location":"Identity-Providers/Configure-ID-porten/#detaljert-bruksanvisning","title":"Detaljert bruksanvisning","text":"<p>Velg Logg inn p\u00e5 Samarbeidsportalen</p> <p></p> <p>Logg inn med en Digdir konto.</p> <p></p> <p>Utvid Integrasjoner, velg Selvbetjening og deretter milj\u00f8.</p> <p></p> <p>Velg Legg til klient.</p> <p></p> <p>Navngi applikasjon, eksempelvis Onboarding med CheckID, og benytt f\u00f8lgende konfigurasjon:</p> Applikasjonstype Autentiseringsmetode web client_secret_post <p>Per april 2025 s\u00e5 fungerer ikke knappen Generer client secret f\u00f8r du har laget, og lagret, applikasjonen.</p> <p></p> <p></p> <p>Under Levetid &amp; Tokens, la alt st\u00e5 som standard.</p> <p></p> <p>Under URI, tilpass redirect uri-er s\u00e5 det matcher med CheckID bestillingen:</p> <p>Konfigurer flere uri-er ved \u00e5 komma-separere dem (xxx,yyy)</p> <p>Din CheckID-kontakt bist\u00e5r gjerne med uri-er.</p> Redirect uri-er https://kundeinstans.checkid.no/signin-oidc,https://onboarding.ditt-selskap.no/signin-oidc Post logout redirect uri-er https://kundeinstans.checkid.no/completed,https://kundeinstans.checkid.no/,https://kundeinstans.checkid.no/v2/completed,https://onboarding.ditt-selskap.no/completed,https://onboarding.ditt-selskap.no/,https://onboarding.ditt-selskap.no/v2/completed <p></p> <p>Lagre klienten. Etter at klienten er laget kan du opprette client secret ved \u00e5 trykke Generer client secret:</p> <p></p> <p>Oversend, p\u00e5 en sikker m\u00e5te, client id og client secret for applikasjonen til din CheckID-kontakt.</p>"},{"location":"Identity-Providers/Overview/","title":"Identity providers","text":"<p>We are continously working to support more identity providers. Please send us a request if you have a particular identity provider you would like to see added to CheckID.</p> <p>Currently we support the below providers.</p>"},{"location":"Identity-Providers/Overview/#id-porten","title":"ID-porten","text":"<p>Countries: Norway</p> <p>Security level: High</p> <p>ID-porten configuration guide</p>"},{"location":"Identity-Providers/Overview/#mitid","title":"MitID","text":"<p>Countries: Denmark</p> <p>Security level: High</p>"},{"location":"Identity-Providers/Overview/#norwegian-bankid","title":"Norwegian BankID","text":"<p>Countries: Norway</p> <p>Security level: High</p>"},{"location":"Identity-Providers/Overview/#finnish-bankid-ftn","title":"Finnish BankID (FTN)","text":"<p>Countries: Finland</p> <p>Security level: High</p>"},{"location":"Identity-Providers/Overview/#swedish-bankid","title":"Swedish BankID","text":"<p>Countries: Sweden</p> <p>Security level: High</p>"},{"location":"Identity-Providers/Overview/#vippsmobilepay","title":"Vipps/MobilePay","text":"<p>Countries: Norway, Sweden, Denmark, Finland</p> <p>Security level: Low</p>"}]}